Started by user admin
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /Users/neojust/.jenkins/workspace/pepline
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Clone)
[Pipeline] git
The recommended git tool is: NONE
Warning: CredentialId "admin" could not be found.
 > git rev-parse --resolve-git-dir /Users/neojust/.jenkins/workspace/pepline/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/Neoju5t/CICD.git # timeout=10
Fetching upstream changes from https://github.com/Neoju5t/CICD.git
 > git --version # timeout=10
 > git --version # 'git version 2.39.3 (Apple Git-146)'
 > git fetch --tags --force --progress -- https://github.com/Neoju5t/CICD.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
Checking out Revision 223dbc3f489784448004e020f2ef224f17a7b06d (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 223dbc3f489784448004e020f2ef224f17a7b06d # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git branch -D master # timeout=10
 > git checkout -b master 223dbc3f489784448004e020f2ef224f17a7b06d # timeout=10
Commit message: "Update README.md"
 > git rev-list --no-walk 223dbc3f489784448004e020f2ef224f17a7b06d # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test)
[Pipeline] sh
+ /usr/local/go/bin/go test .
ok  	github.com/netology-code/sdvps-materials	0.387s
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Docker Image)
[Pipeline] sh
+ /usr/local/bin/docker build -t your-image-name .
#0 building with "desktop-linux" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 350B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/golang:1.16
#2 ...

#3 [internal] load metadata for docker.io/library/alpine:latest
#3 DONE 1.7s

#2 [internal] load metadata for docker.io/library/golang:1.16
#2 DONE 1.7s

#4 [internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [stage-1 1/3] FROM docker.io/library/alpine:latest@sha256:beefdbd8a1da6d2915566fde36db9db0b524eb737fc57cd1367effd16dc0d06d
#5 resolve docker.io/library/alpine:latest@sha256:beefdbd8a1da6d2915566fde36db9db0b524eb737fc57cd1367effd16dc0d06d 0.0s done
#5 DONE 0.0s

#6 [builder 1/4] FROM docker.io/library/golang:1.16@sha256:5f6a4662de3efc6d6bb812d02e9de3d8698eea16b8eb7281f03e6f3e8383018e
#6 resolve docker.io/library/golang:1.16@sha256:5f6a4662de3efc6d6bb812d02e9de3d8698eea16b8eb7281f03e6f3e8383018e 0.0s done
#6 DONE 0.0s

#7 [internal] load build context
#7 transferring context: 107.06kB 0.0s done
#7 DONE 0.0s

#8 [builder 2/4] WORKDIR /go/src/github.com/netology-code/sdvps-materials
#8 CACHED

#9 [builder 3/4] COPY . ./
#9 DONE 0.0s

#10 [builder 4/4] RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix nocgo -o /app .
#10 DONE 1.4s

#11 [stage-1 2/3] RUN apk -U add ca-certificates
#11 CACHED

#12 [stage-1 3/3] COPY --from=builder /app /app
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 exporting manifest sha256:e934290b55df6e1a81a1e02660e1ffdcad8af8fd7c3884c92f066aba98da31c2 done
#13 exporting config sha256:620d552155ac9bd80868066289acd7a21aabac4195d2c65d2423b4bc9085f7fb done
#13 exporting attestation manifest sha256:69810a57b42d0dad375746c1a39e790c6fd2d68b9ac5b0dbb76bef9a1120a960 done
#13 exporting manifest list sha256:cea0cdf813a9f6be2551381325884a7bd9f62f35042f4fbcb72029d1f8fb2c30 done
#13 naming to docker.io/library/your-image-name:latest done
#13 unpacking to docker.io/library/your-image-name:latest done
#13 DONE 0.0s

View build details: docker-desktop://dashboard/build/desktop-linux/desktop-linux/ahnnw389k58deh8t1igwuvela
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
